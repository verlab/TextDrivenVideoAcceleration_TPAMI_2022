semantic_encoding/logs/*
semantic_encoding/models/*
semantic_encoding/results/
semantic_encoding/_utils/*.html
semantic_encoding/_utils/*.npz
semantic_encoding/_utils/*.npy
semantic_encoding/_utils/*.ipynb
semantic_encoding/_utils/*.png
semantic_encoding/_utils/*.pdf
semantic_encoding/_utils/*.gif
semantic_encoding/data/*
semantic_encoding/eval/*.gif
semantic_encoding/eval/*.pdf
semantic_encoding/eval/*.png
semantic_encoding/eval/results/*
semantic_encoding/datasets/VaTeX/raw_videos/*
semantic_encoding/resources/vatex_training_v1.0.json
semantic_encoding/resources/vatex_validation_v1.0.json
semantic_encoding/resources/glove.6B.300d.txt
rl_fast_forward/*.csv
rl_fast_forward/*.json
rl_fast_forward/results/*
rl_fast_forward/REINFORCE/*logs*/*
rl_fast_forward/models/*
rl_fast_forward/eval/*.pdf
rl_fast_forward/eval/*.avi
rl_fast_forward/eval/*.png
rl_fast_forward/eval/*.csv
rl_fast_forward/eval/*.json
rl_fast_forward/eval/*.npz
rl_fast_forward/eval/*.txt
rl_fast_forward/logs/*

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# celery beat schedule file
celerybeat-schedule

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/
